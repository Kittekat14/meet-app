{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mockData.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","detailsHandler","e","setState","show","state","event","this","className","summary","Date","start","dateTime","toString","slice","timeZone","end","location","description","organizer","email","status","type","onClick","Component","EventList","events","map","id","CitySearch","handleInputChanged","value","target","suggestions","locations","filter","toUpperCase","indexOf","query","handleItemClicked","suggestion","showSuggestions","updateEvents","undefined","onChange","onFocus","style","display","NumberOfEvents","infoText","htmlFor","eventCounter","updateEventNumber","mockData","JSON","parse","stringify","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","encodeCode","encodeURIComponent","fetch","then","res","json","catch","access_token","setItem","result","removeQuery","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","token","url","App","numberOfEvents","eventsToShow","mounted","currentLocation","eventCount","parseInt","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.18d17911.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       show: true\r\n    }\r\n    \r\n  }\r\n\r\n  detailsHandler = (e) => {\r\n    this.setState({\r\n      show: !this.state.show\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { event } = this.props;\r\n\r\n    return (\r\n    <div className=\"event\">\r\n      <h3>{event.summary}</h3>\r\n      {this.state.show &&\r\n      <div className=\"summary\">\r\n        <p className=\"name\">{event.summary}</p>\r\n        <p className=\"startTime\"><span className=\"timeLabel\">From:</span> \r\n        {new Date(event.start.dateTime).toString().slice(4, 21)} ({event.start.timeZone})</p>\r\n        <p className=\"endTime\"><span className=\"timeLabel\">To:</span> \r\n        {new Date(event.end.dateTime).toString().slice(4, 21)} ({event.end.timeZone})</p>\r\n        <p className=\"location\">{event.location}</p>\r\n      </div>\r\n      }\r\n      {!this.state.show &&\r\n      <div className=\"details\">\r\n        <p className=\"name\">{event.summary}</p>\r\n        <p className=\"startTime\"><span className=\"timeLabel\">From:</span> \r\n        {new Date(event.start.dateTime).toString().slice(4, 21)} ({event.start.timeZone})</p>\r\n        <p className=\"endTime\"><span className=\"timeLabel\">To:</span> \r\n        {new Date(event.end.dateTime).toString().slice(4, 21)} ({event.end.timeZone})</p>\r\n        <p className=\"location\">{event.location}</p>\r\n        <p className=\"decription\">{event.description}</p>\r\n        <p className=\"organizerEmail\">@{event.organizer.email}</p>\r\n        <p className=\"status\">{event.status}</p>\r\n      </div>\r\n      }\r\n      {this.state.show &&\r\n      <button type=\"button\" onClick={(e) => this.detailsHandler(e)} className=\"showDetailsButton button\">Show Details</button>}\r\n      {!this.state.show &&\r\n      <button type=\"button\" onClick={(e) => this.detailsHandler(e)} className=\"hideDetailsButton button\">Hide Details</button>}\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n  const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event}  />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       query: '',\r\n      suggestions: [],\r\n      showSuggestions: undefined\r\n    }\r\n  }\r\n  \r\n  handleInputChanged = (event) => {\r\n  const value = event.target.value;\r\n  const suggestions = this.props.locations.filter((location) => {\r\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  });\r\n  this.setState({\r\n    query: value,\r\n    suggestions,\r\n  });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n     \r\n      <div className=\"CitySearch\">\r\n        <input\r\n        type=\"text\"\r\n        className=\"city\"\r\n        value={this.state.query}\r\n        onChange={this.handleInputChanged}\r\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' } }>\r\n          {this.state.suggestions.map((suggestion) => (\r\n          <li \r\n            key={suggestion}\r\n            onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n            ))}\r\n          <li>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      infoText: ''\r\n    }\r\n  }\r\n\r\n  // handleInputChanged = (event) => {\r\n  //   const newCounter = event.target.value;\r\n  //    if (isNaN(newCounter) || newCounter < 1) {\r\n  //     this.setState({\r\n  //       eventCounter: '',\r\n  //       infoText: 'Please write a number',\r\n  //     })\r\n  //   } else {\r\n  //     this.setState({\r\n  //       eventCounter: newCounter,\r\n  //       infoText: ''\r\n  //     });\r\n  //   };\r\n  //   this.props.updateEventNumber(event.target.value);\r\n  //}\r\n\r\n\r\n  render() {\r\n\r\n    const { infoText } = this.state;\r\n\r\n    return (\r\n      <div className=\"EventNumberComponent\">\r\n\r\n      <label htmlFor=\"numberOfEventsInput\"> Number of Events on Page:\r\n\r\n\r\n      <input \r\n        id=\"numberOfEventsInput\"\r\n        type=\"number\" \r\n        className=\"numberInput\" \r\n        value={this.props.eventCounter}\r\n        onChange={(event) => {this.props.updateEventNumber(event)} } />\r\n      </label>\r\n\r\n      <p className=\"infoText .Alert\">{infoText}</p>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","let mockData = [\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200525T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjVUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-25T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-25T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-25T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200526T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjZUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-26T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-26T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-26T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200527T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjdUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-27T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-27T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-27T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  \r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\nexport default mockData;\r\n\r\n","import mockData from './mockData';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\n\r\nexport const getAccessToken = async () => {\r\n\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) { //no access_token was found OR tokenCheck resulted in error\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\"); // if a code is in searchParams, proceed in line 28 (where you get the token)\r\n    if (!code) { // if not logged in with Google, there will be no code in searchParams  --> new start with authUrl\r\n      const results = await axios.get(\r\n        \"https://vpdug6jj84.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken; //if there is an accessToken and tokenCheck passes\r\n\r\n}\r\n\r\n//if a code is present, encode that code and encoded code will give me the access_token, which I store in localStorage\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://vpdug6jj84.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n\r\n// checks the validity of accessToken\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n  return result;\r\n};\r\n\r\n// removes code from URL when getEvents function is triggered (you don't need the code anymore)\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\n//fetches mockData, if requesting from localhost; returns actual events if valid token \r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n  \r\nconst token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://vpdug6jj84.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n   \r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n\r\n    NProgress.done();\r\n    return result.data.events;\r\n\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport './nprogress.css';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from \"./api\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      events: [],\r\n      locations: [],\r\n      numberOfEvents: 32,\r\n      currentLocation: 'all',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: events.slice(0, this.state.numberOfEvents),\r\n          locations: extractLocations(events),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n\r\n\r\n   updateEvents = (location, numberOfEvents) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents =\r\n        location === \"all\"\r\n          ? events\r\n          : events.filter((event) => event.location === location);\r\n\r\n      const eventsToShow = locationEvents.slice(0, numberOfEvents);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: eventsToShow,\r\n          currentLocation: location\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  updateEventNumber = async (event) => {\r\n    const eventCount = event.target.value ? parseInt(event.target.value) : 32;\r\n    await this.setState({ numberOfEvents: eventCount });\r\n    this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n        <EventList events={this.state.events}/>\r\n        <NumberOfEvents eventCounter={this.state.numberOfEvents} updateEventNumber={(event) => this.updateEventNumber(event)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}