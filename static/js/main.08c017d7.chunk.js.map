{"version":3,"sources":["Event.js","Alert.js","EventList.js","CitySearch.js","NumberOfEvents.js","mockData.js","api.js","images/MEET2.png","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","detailsHandler","e","setState","show","state","event","this","className","summary","Date","start","dateTime","toString","slice","timeZone","end","location","description","organizer","email","status","type","onClick","Component","Alert","getStyle","color","backgroundColor","fontSize","fontWeight","maxWidth","margin","style","text","InfoAlert","fontStyle","ErrorAlert","WarningAlert","EventList","warningText","events","navigator","onLine","map","id","CitySearch","handleInputChanged","value","target","showSuggestions","suggestions","locations","filter","toUpperCase","indexOf","length","query","infoText","handleItemClicked","suggestion","updateEvents","undefined","placeholder","onChange","onFocus","display","NumberOfEvents","updateEventNumber","isNaN","errorText","numberOfEvents","htmlFor","mockData","JSON","parse","stringify","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","encodeCode","encodeURIComponent","fetch","then","res","json","catch","access_token","setItem","result","removeQuery","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","token","url","WelcomeScreen","showWelcomeScreen","Container","Row","Col","align","class","src","alt","rel","App","eventsToShow","currentLocation","changedNumber","isTokenValid","logo","width","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.08c017d7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       show: true\r\n    }\r\n    \r\n  }\r\n\r\n  detailsHandler = (e) => {\r\n    this.setState({\r\n      show: !this.state.show\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { event } = this.props;\r\n\r\n    return (\r\n    <div className=\"event\">\r\n      <h3>{event.summary}</h3>\r\n      {this.state.show &&\r\n      <div className=\"summary\">\r\n        <p className=\"name\">{event.summary}</p>\r\n        <p className=\"startTime\"><span className=\"timeLabel\">From:</span> \r\n        {new Date(event.start.dateTime).toString().slice(4, 21)} ({event.start.timeZone})</p>\r\n        <p className=\"endTime\"><span className=\"timeLabel\">To:</span> \r\n        {new Date(event.end.dateTime).toString().slice(4, 21)} ({event.end.timeZone})</p>\r\n        <p className=\"location\">{event.location}</p>\r\n      </div>\r\n      }\r\n      {!this.state.show &&\r\n      <div className=\"details\">\r\n        <p className=\"name\">{event.summary}</p>\r\n        <p className=\"startTime\"><span className=\"timeLabel\">From:</span> \r\n        {new Date(event.start.dateTime).toString().slice(4, 21)} ({event.start.timeZone})</p>\r\n        <p className=\"endTime\"><span className=\"timeLabel\">To:</span> \r\n        {new Date(event.end.dateTime).toString().slice(4, 21)} ({event.end.timeZone})</p>\r\n        <p className=\"location\">{event.location}</p>\r\n        <p className=\"decription\">{event.description}</p>\r\n        <p className=\"organizerEmail\">@{event.organizer.email}</p>\r\n        <p className=\"status\">{event.status}</p>\r\n      </div>\r\n      }\r\n      {this.state.show &&\r\n      <button type=\"button\" onClick={(e) => this.detailsHandler(e)} className=\"showDetailsButton button\">Show Details</button>}\r\n      {!this.state.show &&\r\n      <button type=\"button\" onClick={(e) => this.detailsHandler(e)} className=\"hideDetailsButton button\">Hide Details</button>}\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n    this.backgroundColor = null;\r\n    this.fontSize = null;\r\n    this.fontWeight = null;\r\n    this.maxWidth = null;\r\n    this.margin = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      backgroundColor: this.backgroundColor,\r\n      fontSize: this.fontSize,\r\n      fontWeight: this.fontWeight,\r\n      maxWidth: this.maxWidth,\r\n      margin: this.margin,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class InfoAlert extends Alert {\r\n  constructor(props) {\r\n      super(props);\r\n    this.color = 'blue';\r\n    this.backgroundColor = '#cdcdcd';\r\n    this.fontSize = '14px';\r\n    this.fontWeight = '500';\r\n    this.maxWidth = '600px';\r\n    this.margin = '0 auto';\r\n    this.fontStyle = 'italic';\r\n  }\r\n}\r\n\r\nexport class ErrorAlert extends Alert {\r\n  constructor(props) {\r\n      super(props);\r\n    this.color = 'red';\r\n    this.backgroundColor = '#fff';\r\n    this.fontSize = '16px';\r\n    this.fontWeight = '700';\r\n    this.margin = \"0 auto\";\r\n  }\r\n}\r\n\r\nexport class WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = \"#f3f72f\";\r\n    this.backgroundColor = \"#000\";\r\n    this.fontSize = \"16px\";\r\n    this.fontWeight = \"700\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Event from './Event';\r\nimport { WarningAlert } from './Alert';\r\n\r\nclass EventList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       warningText: \"This event list was cached and you're currently offline.\"\r\n    }\r\n  }\r\n  \r\n  render() {\r\n  const { events } = this.props;\r\n    return (\r\n      <div>\r\n        {!navigator.onLine ? \r\n        <WarningAlert text={this.state.warningText} /> :\r\n        null }\r\n\r\n        <ul className=\"EventList\">\r\n          {events.map(event =>\r\n            <li key={event.id}>\r\n              <Event event={event}  />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from \"react\";\r\nimport { InfoAlert } from \"./Alert\";\r\n\r\nclass CitySearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: \"\",\r\n      suggestions: [],\r\n      showSuggestions: undefined,\r\n      infoText: \"\",\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText:\r\n          \"We can not find the city you are looking for. Please try another city\",\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        showSuggestions: true,\r\n        infoText: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n        query: suggestion,\r\n        suggestions: [],\r\n        showSuggestions: false,\r\n        infoText: \"\",\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InfoAlert className=\"infoAlert\" text={this.state.infoText} />\r\n        <div className=\"CitySearch\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Find Events in your City\"\r\n            className=\"city\"\r\n            value={this.state.query}\r\n            onChange={(event) => this.handleInputChanged(event)}\r\n            onFocus={() => {\r\n              this.setState({ showSuggestions: true });\r\n            }}\r\n          />\r\n          <ul\r\n            className=\"suggestions\"\r\n            style={this.state.showSuggestions ? {} : { display: \"none\" }}\r\n          >\r\n            {this.state.suggestions.map((suggestion) => (\r\n              <li\r\n                key={suggestion}\r\n                onClick={() => this.handleItemClicked(suggestion)}\r\n              >\r\n                {suggestion}\r\n              </li>\r\n            ))}\r\n            <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\r\n              <b>See all cities</b>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorText: ''\r\n    }\r\n  }\r\n\r\nhandleInputChanged = (event) => {\r\n  const value = event.target.value;\r\n  this.props.updateEventNumber(value);\r\n\r\n  if (isNaN(value) || value <= 0) {\r\n    return this.setState({\r\n      errorText: \"Please write a number bigger than 0\",\r\n    });\r\n  } else if (value > 32) {\r\n    return this.setState({\r\n      errorText: \"Please select a number from 1 to 32\",\r\n    });\r\n  } else {\r\n    return this.setState({\r\n      numberOfEvents: value,\r\n      errorText: '',\r\n    });\r\n  };\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EventNumberComponent\">\r\n\r\n      <label htmlFor=\"numberOfEventsInput\"> Number of Events on Page:\r\n      <input \r\n        id=\"numberOfEventsInput\"\r\n        type=\"text\" \r\n        className=\"numberInput\" \r\n        value={this.props.numberOfEvents}\r\n        onChange={(event) => this.handleInputChanged(event)} />\r\n      </label>\r\n\r\n      <ErrorAlert className=\"errorAlert\" text={this.state.errorText} />\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","let mockData = [\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200525T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjVUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-25T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-25T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-25T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200526T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjZUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-26T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-26T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-26T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200527T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjdUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-27T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-27T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-27T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  \r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\nexport default mockData;\r\n\r\n","import mockData from './mockData';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) { //no access_token was found OR tokenCheck resulted in error\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\"); // if a code is in searchParams, proceed in line 28 (where you get the token)\r\n    if (!code) { // if not logged in with Google, there will be no code in searchParams  --> new start with authUrl\r\n      const results = await axios.get(\r\n        \"https://vpdug6jj84.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken; //if there is an accessToken and tokenCheck passes\r\n\r\n}\r\n\r\n//if a code is present, encode that code and encoded code will give me the access_token, which I store in localStorage\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://vpdug6jj84.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n\r\n// checks the validity of accessToken\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n  return result;\r\n};\r\n\r\n// removes code from URL when getEvents function is triggered (you don't need the code anymore)\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\n//fetches mockData, if requesting from localhost; returns actual events if valid token \r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events  = await localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return events?JSON.parse(events).events:[];\r\n  }\r\n  \r\nconst token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://vpdug6jj84.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n   \r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    \r\n    NProgress.done();\r\n    return result.data.events;\r\n\r\n  }\r\n};","export default __webpack_public_path__ + \"static/media/MEET2.9b07cb60.png\";","import React from \"react\";\r\nimport \"./WelcomeScreen.css\";\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\nfunction WelcomeScreen(props) {\r\n\r\n  return props.showWelcomeScreen ? (\r\n    <div className=\"WelcomeScreen\">\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n          <h1>Welcome to the Meet app</h1>\r\n          <h4>\r\n            Log in to see upcoming events around the world for full-stack\r\n            developers\r\n          </h4>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <div className=\"button_cont\" align=\"center\">\r\n            <div class=\"google-btn\">\r\n              <div class=\"google-icon-wrapper\">\r\n                <img\r\n                  class=\"google-icon\"\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                  alt=\"Google sign-in\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  props.getAccessToken();\r\n                }}\r\n                rel=\"nofollow noopener\"\r\n                class=\"btn-text\"\r\n              >\r\n                Sign in with google\r\n              </button>\r\n            </div>\r\n          </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <a\r\n            href=\"https://kittekat14.github.io/meet-app/privacy.html\"\r\n            rel=\"nofollow noopener\"\r\n          >\r\n            Privacy policy\r\n          </a>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default WelcomeScreen;\r\n","import React, { Component } from 'react';\r\nimport './nprogress.css';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from \"./api\";\r\nimport logo from './images/MEET2.png';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport { checkToken, getAccessToken } from './api';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      events: [],\r\n      locations: [],\r\n      numberOfEvents: 32,\r\n      currentLocation: \"all\",\r\n      showWelcomeScreen: undefined,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if (code || isTokenValid) {\r\n      getEvents().then((events) => { \r\n        this.setState({ events, locations: extractLocations(events) });\r\n      });\r\n    }\r\n  }\r\n\r\n  updateEvents = (location, numberOfEvents) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents =\r\n        location === \"all\"\r\n          ? events\r\n          : events.filter((event) => event.location === location);\r\n\r\n      const eventsToShow = locationEvents.slice(0, numberOfEvents);\r\n        this.setState({\r\n          events: eventsToShow,\r\n          currentLocation: location,\r\n        });\r\n    });\r\n  };\r\n\r\n  updateEventNumber = (changedNumber) => {\r\n    this.setState({ numberOfEvents: changedNumber });\r\n    this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.showWelcomeScreen === undefined)\r\n      return <div className=\"App\" />;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <img src={logo} alt=\"Logo\" width=\"250\" />\r\n\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateEvents={this.updateEvents}\r\n        />\r\n\r\n        <EventList events={this.state.events} />\r\n        \r\n        <NumberOfEvents\r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEventNumber={(value) => this.updateEventNumber(value)}\r\n        />\r\n\r\n        <WelcomeScreen\r\n          showWelcomeScreen={this.state.showWelcomeScreen}\r\n          getAccessToken={() => getAccessToken()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as atatus from 'atatus-spa';\r\n\r\n// atatus.config('8616c2112d0e4b399b938fe9cb63e9b3').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// check if atatus is integrated successfully: call the notify method to get an error \r\n//atatus.notify(new Error('Test Atatus Setup'));\r\n"],"sourceRoot":""}