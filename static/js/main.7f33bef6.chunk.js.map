{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mockData.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","detailsHandler","e","setState","show","state","event","this","className","summary","start","dateTime","end","location","timeZone","description","organizer","email","status","type","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","onChange","NumberOfEvents","handleInputChange","newCounter","isNaN","eventCounter","infoText","htmlFor","mockData","JSON","parse","stringify","extractLocations","Set","App","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f33bef6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       show: true\r\n    }\r\n    \r\n  }\r\n\r\n  detailsHandler = (e) => {\r\n    this.setState({\r\n      show: !this.state.show\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { event } = this.props;\r\n\r\n    return (\r\n    <div className=\"event\">\r\n      <h3>{event.summary}</h3>\r\n      {this.state.show &&\r\n      <div className=\"summary\">\r\n        <p className=\"name\">{event.summary}</p>\r\n        <p className=\"startTime\">{event.start.dateTime}</p>\r\n        <p className=\"endTime\">{event.end.dateTime}</p>\r\n        <p className=\"location\">{event.location}</p>\r\n      </div>\r\n      }\r\n      {!this.state.show &&\r\n      <div className=\"details\">\r\n          <p className=\"name\">{event.summary}</p>\r\n          <p className=\"startTime\">{event.start.dateTime}</p>\r\n          <p className=\"endTime\">{event.end.dateTime}</p>\r\n          <p className=\"timeZone\">{event.start.timeZone}</p>\r\n          <p className=\"location\">{event.location}</p>\r\n          <p className=\"decription\">{event.description}</p>\r\n          <p className=\"organizerEmail\">{event.organizer.email}</p>\r\n          <p className=\"status\">{event.status}</p>\r\n        </div>\r\n      }\r\n      <button type=\"button\" onClick={(e) => this.detailsHandler(e)} className=\"showDetailsButton\">{this.state.show && \"Show Details\"}</button>\r\n      <button type=\"button\" onClick={(e) => this.detailsHandler(e)} className=\"hideDetailsButton\">{!this.state.show && \"Hide Details\"}</button>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n  const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event}  />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n  const value = event.target.value;\r\n  const suggestions = this.props.locations.filter((location) => {\r\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  });\r\n  this.setState({\r\n    query: value,\r\n    suggestions,\r\n  });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n        type=\"text\"\r\n        className=\"city\"\r\n        value={this.state.query}\r\n        onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li \r\n            key={suggestion}\r\n            onClick={() => {\r\n              return this.handleItemClicked(suggestion)\r\n            }}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      eventCounter: 32,\r\n      infoText: ''\r\n    }\r\n  }\r\n\r\n\r\n  handleInputChange = (event) => {\r\n    const newCounter = event.target.value;\r\n     if (isNaN(newCounter) || newCounter < 1) {\r\n      this.setState({\r\n        eventCounter: newCounter,\r\n        infoText: 'Please write a number',\r\n      })\r\n    } else {\r\n      this.setState({\r\n        eventCounter: newCounter,\r\n        infoText: ''\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { eventCounter, infoText } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <label htmlFor=\"numberOfEventsInput\"> Number of Events on Page:\r\n      <input \r\n        id=\"numberOfEventsInput\"\r\n        type=\"text\" \r\n        className=\"numberInput\" \r\n        value={eventCounter}\r\n        onChange={(value) => this.handleInputChange(value)} />\r\n      </label>\r\n      <p className=\"infoText\">{infoText}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","let mockData = [\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200525T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjVUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-25T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-25T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-25T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200526T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjZUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-26T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-26T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-26T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200527T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjdUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-27T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-27T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-27T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  \r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\nexport default mockData;\r\n\r\n","import mockData from './mockData';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  return mockData;\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport mockData from './mockData';\r\nimport { extractLocations } from \"./api\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: mockData,\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch locations={extractLocations(mockData)} />\r\n        <EventList events={this.state.events}/>\r\n        <NumberOfEvents />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}